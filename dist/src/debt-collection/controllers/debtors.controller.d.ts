import { DebtorService } from '../services/debtor.service.js';
import { CreateDebtorDto } from '../dto/create-debtor.dto.js';
import { UpdateDebtorDto } from '../dto/update-debtor.dto.js';
export declare class DebtorsController {
    private readonly debtorService;
    constructor(debtorService: DebtorService);
    create(organizationId: number, createDebtorDto: CreateDebtorDto): Promise<{
        id: string;
        organizationId: number;
        createdAt: Date;
        updatedAt: Date;
        firstName: string;
        lastName: string;
        phone: string;
        status: import("@prisma/client").$Enums.DebtorStatus;
        lastContactDate: Date | null;
        callAttempts: number;
        alternatePhone: string | null;
        email: string | null;
        debtAmount: number;
        currency: string;
        contractNumber: string;
        dueDate: Date;
        productService: string;
        debtReason: string | null;
        daysOverdue: number;
        maxCallAttempts: number;
        lastContactOutcome: string | null;
    }>;
    bulkImport(organizationId: number, file: Express.Multer.File): Promise<{
        success: number;
        failed: number;
        errors: any[];
        created: {
            id: string;
            organizationId: number;
            createdAt: Date;
            updatedAt: Date;
            firstName: string;
            lastName: string;
            phone: string;
            status: import("@prisma/client").$Enums.DebtorStatus;
            lastContactDate: Date | null;
            callAttempts: number;
            alternatePhone: string | null;
            email: string | null;
            debtAmount: number;
            currency: string;
            contractNumber: string;
            dueDate: Date;
            productService: string;
            debtReason: string | null;
            daysOverdue: number;
            maxCallAttempts: number;
            lastContactOutcome: string | null;
        }[];
    }>;
    findAll(organizationId: number, status?: string, search?: string, limit?: string, skip?: string): Promise<{
        debtors: {
            id: string;
            organizationId: number;
            createdAt: Date;
            updatedAt: Date;
            firstName: string;
            lastName: string;
            phone: string;
            status: import("@prisma/client").$Enums.DebtorStatus;
            lastContactDate: Date | null;
            callAttempts: number;
            alternatePhone: string | null;
            email: string | null;
            debtAmount: number;
            currency: string;
            contractNumber: string;
            dueDate: Date;
            productService: string;
            debtReason: string | null;
            daysOverdue: number;
            maxCallAttempts: number;
            lastContactOutcome: string | null;
        }[];
        total: number;
    }>;
    findOne(id: string, organizationId: number): Promise<{
        campaignAssignments: ({
            campaign: {
                id: string;
                organizationId: number;
                name: string;
                createdAt: Date;
                updatedAt: Date;
                status: import("@prisma/client").$Enums.DebtCampaignStatus;
                description: string | null;
                failedCalls: number;
                startedAt: Date | null;
                completedAt: Date | null;
                successfulCalls: number;
                dailyCallStartHour: number;
                dailyCallEndHour: number;
                maxCallsPerDay: number;
                totalDebtors: number;
                calledDebtors: number;
                promisesReceived: number;
                disputesReceived: number;
                createdBy: string | null;
            };
        } & {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            notes: string | null;
            campaignId: string;
            callStatus: import("@prisma/client").$Enums.DebtCallStatus;
            callAttempts: number;
            outcome: import("@prisma/client").$Enums.DebtCallOutcome | null;
            priority: number;
            debtorId: string;
            assignedAt: Date;
            lastCallAt: Date | null;
            nextCallAt: Date | null;
            liveKitRoomName: string | null;
            pbxCallId: string | null;
            callDurationSeconds: number | null;
            callContext: import("@prisma/client/runtime/library").JsonValue | null;
            promisedAmount: number | null;
            promisedDate: Date | null;
        })[];
    } & {
        id: string;
        organizationId: number;
        createdAt: Date;
        updatedAt: Date;
        firstName: string;
        lastName: string;
        phone: string;
        status: import("@prisma/client").$Enums.DebtorStatus;
        lastContactDate: Date | null;
        callAttempts: number;
        alternatePhone: string | null;
        email: string | null;
        debtAmount: number;
        currency: string;
        contractNumber: string;
        dueDate: Date;
        productService: string;
        debtReason: string | null;
        daysOverdue: number;
        maxCallAttempts: number;
        lastContactOutcome: string | null;
    }>;
    update(id: string, organizationId: number, updateDebtorDto: UpdateDebtorDto): Promise<{
        id: string;
        organizationId: number;
        createdAt: Date;
        updatedAt: Date;
        firstName: string;
        lastName: string;
        phone: string;
        status: import("@prisma/client").$Enums.DebtorStatus;
        lastContactDate: Date | null;
        callAttempts: number;
        alternatePhone: string | null;
        email: string | null;
        debtAmount: number;
        currency: string;
        contractNumber: string;
        dueDate: Date;
        productService: string;
        debtReason: string | null;
        daysOverdue: number;
        maxCallAttempts: number;
        lastContactOutcome: string | null;
    }>;
    remove(id: string, organizationId: number): Promise<{
        id: string;
        organizationId: number;
        createdAt: Date;
        updatedAt: Date;
        firstName: string;
        lastName: string;
        phone: string;
        status: import("@prisma/client").$Enums.DebtorStatus;
        lastContactDate: Date | null;
        callAttempts: number;
        alternatePhone: string | null;
        email: string | null;
        debtAmount: number;
        currency: string;
        contractNumber: string;
        dueDate: Date;
        productService: string;
        debtReason: string | null;
        daysOverdue: number;
        maxCallAttempts: number;
        lastContactOutcome: string | null;
    }>;
}
